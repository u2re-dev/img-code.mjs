const A=(()=>{const A=[];for(let e=0;e<256;e++){let n=e;for(let A=0;A<8;A++)n=1&n?3988292384^n>>>1:n>>>1;A.push(n)}return A})(),e=new Uint8Array([139,74,78,71,13,10,26,10]),n=new Uint8Array([137,80,78,71,13,10,26,10]),t=new Uint8Array([0,0,0,0,73,69,78,68,174,66,96,130]),r={type:"image/png"},a={type:"image/jpeg"},o=new TextDecoder,i=(new TextEncoder,(A,e)=>A.filter((({type:A})=>A.toUpperCase()==e))),w=(A=>{if(Uint8Array.fromBase64)return Uint8Array.fromBase64(A);if("undefined"==typeof atob)throw Error("No-atob");const e=atob(A),n=e.length,t=new Uint8Array(n);for(let A=0;A<n;A++)t[A]=e.charCodeAt(A);return t})("AGFzbQEAAAABCAFgBH9/f38AAg8BA2VudgZtZW1vcnkCAAEDAgEABwcBA21hYwAACtQBAdEBAwF/BHsDfwJAA0AgBCADTw0BIAEgBGr9AAQAIQUgAiAEav0ABAAhBiAGIAb9DQAECAwABAgMAAQIDAAECAwhByAFIAf9DQABAhAEBQYRCAkKEgwNDhMhCCAAIARqIAj9CwQAIARBEGohBAwACwsCQANAIAQgA08NASABIARqIQkgAiAEaiELIAAgBGohCiAKIAktAAA6AAAgCkEBaiAJQQFqLQAAOgAAIApBAmogCUECai0AADoAACAKQQNqIAstAAA6AAAgBEEEaiEEDAALCws="),l=(A,e)=>{const n=new Uint8Array(A),t=new DataView(A);for(let A=0;A<e.length;A++)if(n[A]!==e[A])throw Error("Wrong-Sign");let r=e.length,a=[];for(;r+12<=t.byteLength;){const A=t.getUint32(r,!1),e=o.decode(n.subarray(r+4,r+8)),i=n.subarray(r+8,r+8+A),w=n.subarray(r,r+12+A);if(r+12+A>t.byteLength)break;a.push({type:e,A,data:i,t:w}),r+=12+A}return a},s=e=>{if(e[13])throw Error("No PNG alpha.");const n=new Uint8Array(25);n.set(new Uint8Array([0,0,0,13,73,72,68,82]),0),n.set(new Uint8Array(e.buffer,e.byteOffset+0,8),8),n.set(new Uint8Array([e[12],0,0,e[14],e[15]]),16);const t=((e,n=-1)=>{let t=n;for(let n=0;n<e.length;n++)t=t>>>8^A[255&(t^e[n])];return~t>>>0})(n.subarray(4,21));return n.set(new Uint8Array([t>>>24&255,t>>>16&255,t>>>8&255,255&t]),21),n},c=(A,e)=>{const n=new VideoFrame(A,{timestamp:0,alpha:"discard"});return n.copyTo(e,{format:"RGBX"}),n.close(),e};export const decodeJNG=async A=>{const o=(A=>{const n=l(A,e);return{o:n,i:i(n,"JDAT").map((A=>A.data)),l:i(n,"JDAA").map((A=>A.data)),B:i(n,"IDAT").map((A=>A.t))}})(A),y=new Blob(o.i,a);let B=null;if(o.B?.length>0){const A=o.o.find((({type:A})=>"JHDR"==A));B=new Blob([n,s(A.data),...o.B,t],r)}else o.l?.length>0&&(B=new Blob(o.l,a));const p={p:"none",m:"default"},g=await createImageBitmap(y,p),E=B?await createImageBitmap(B,p):null,d=(E?await(Promise.try((async()=>{const A=g.width*g.height*4,e=0+A,n=new WebAssembly.Memory({initial:2*A/65536+1}),t=n.buffer,r=(await WebAssembly.instantiate(w,{env:{memory:n}})).instance.exports;c(g,new Uint8ClampedArray(t,0,A)),c(E,new Uint8ClampedArray(t,e,A)),r.mac(0,0,e,A);const a=new Uint8ClampedArray(t,0,A);return new ImageData(a,g.width,g.height,{})}))?.catch?.(console.warn.bind(console))):null)??g,f=new OffscreenCanvas(g.width,g.height);return f.getContext("2d",{desynchronized:!0,willReadFrequently:!0,antialias:!1,powerPreference:"low-power",premultipliedAlpha:!1})?.[d instanceof ImageData?"putImageData":"drawImage"]?.(d,0,0),(async(A,e)=>{const t=new Set(["JDAT","JDAA","IDAT","IHDR","JHDR","IEND","JSEP"]),a=e.filter((({type:A})=>!t.has(A.toUpperCase()))).map((({t:A})=>A)),o=(A=>{const e=l(A,n);return[n,...e.filter((A=>"sRGB"!==A.type)).map((A=>A.t))]})(await A.arrayBuffer());return o.splice(2,0,...a),new Blob(o,r)})(await f.convertToBlob(r),o.o)};